#!/bin/bash
BlackRed="\033[31m"
BlackGreen="\033[32m"
reset="\033[0m"
file="${HOME}/dest.list"
DELETE="/tmp/del"
backup="/tmp/dest.list.backup"

touch ${file}
touch ${backup}
perm=$(stat -c %a ${backup})
NUM="$(sort ${file} | wc -l)"

help()
{
	cat <<- EOF
		  usage: autossh [-hedn] [remote_hosname]
	        Creates a list from your most often used destinations and
	        will refer to it anytime you try to connet through SSH.

		  Options:
		    -h	show this help and exit
		    -e	create/edit the dest list
		    -d	delete from list
		    -n	using autossh with destination name instead of selecting it from list
	EOF
}

while [[ -f ${file} ]]; do
	if [[ ! -s ${file} && $# -eq 0 ]]; then
		help
		exit 0
	elif [[ $# -gt 0 ]]; then

while getopts :endh option; do
	case ${option} in
		n)
			ssh $(grep -i $2 ${file} | cut -d ":" -f 3)@$2
			exit 0
			;;
		d)
			for (( i=1 ; i<=${NUM} ; i+=1 ))
			do
			echo -ne "${i}: $(cat ${file} | cut -d ":" -f 1 | sed -n ${i}p)\n"
			done
			read -p "Enter a number to delete: " del
			sed "${del}d" ${backup} | tee ${file}
			cat ${file} > ${backup}
			exit 0
			;;
		h)
			help
			exit 0
			;;
		e)
echo "Make your own list"

read -p "Continue with editing your list ? [y] " answer
while [[ -n ${answer} ]]; do
	if [[ ${answer} = "y" || ${answer} = "yes" ]]; then
		break
	elif  [[ ${answer} = "n" || ${answer} = "no" ]]; then
		exit 0
	else
		echo -e "${BlackRed}NO VALID INPUT${reset}"
		read -p "Continue with editing your list ? [y] " answer
	fi
done

read -p "Do you want to add destinations to your '/etc'hosts' file too ? [y] " ETC
while [[ -n ${ETC} ]]; do
	if [[ ${ETC} = "y" || ${ETC} = "yes" || ${ETC} = "no" || ${ETC} = "n" ]]; then
		break
	else
		echo -e "${BlackRed}NO VALID INPUT${reset}"
		read -p "Do you want to add destinations to your '/etc'hosts' file too ? [y] " ETC
	fi
done

if [[ -z ${ETC} || ${ETC} = "y" || ${ETC} = "yes" ]] && [[ ${USER} != root ]]; then
	echo -e "${BlackRed}permission denied${reset}"
	exit 0
fi

while [[ -z ${answer} || ${answer} = "y" || ${answer} = "yes" ]]; do
	answer="y"

  	while [[ ${answer} = "y" ]]; do
	read -p "Enter Hostname/IP: " dest
	read -p "Pick a name for this IP address: " name
	read -p "Enter the username you wanna use to login: " user
	echo "'${name}'":${dest}:${user} >> ${file}
	if [[ ! ${perm} = 666 ]]; then
		chmod 666 ${backup}
	fi
	if [[ -z ${ETC} || ${ETC} = "y" || ${ETC} = "yes" ]]; then
			echo "${dest}	${name}" >> /etc/hosts
	fi
	read -p "Is there any other hosts you wanna add to your list ? [y] " answer

	  if [[ -z ${answer} || ${answer} = "y" || ${answer} = "yes" ]]; then
	  	answer="y"
	  elif	[[ ${answer} = "n" || ${answer} = "no" ]]; then
		echo "your list has been saved to '${file}'"
		echo "you have also a backup list at '${backup}'"
		# Uncomment the following line if you wanna check the destination list with more detail.
		#echo -ne "${BlackGreen}$(cat ${file})\n${reset}"
	  else
		echo -e "${BlackRed}NO VALID INPUT${reset}"
		read -p "Is there any other hosts you wanna add to your list ? [y] " answer
	  fi
	done
done;;
		\?) echo -e "${BlackRed}illegal option -- $OPTARG${reset}"
			help
			exit 1
			;;
	esac
done

#		if [[ -z ${ETC} || ${ETC} = "y" || ${ETC} = "yes" ]]; then
#			cat ${hosts} >> /etc/hosts
#		fi
	fi
	break
done

cat ${file} > ${backup}
NUM_LINE="$(sort ${file} | wc -l)"
echo "Here are your most often used destionations: "
for (( i=1 ; i<=${NUM_LINE} ; i+=1 ))
  do
	echo -ne "${i}: $(sort ${file} | cut -d ":" -f 1 | sed -n ${i}p)\n"
  done
read -p "Do you wanna connect now ? [y] " connect
	while [[ -n ${connect} || ${connect} != "y" || ${connect} != "yes" || ${connect} != "n" || ${connect} != "no" ]]; do
	if [[ -z ${connect} || ${connect} = "y" || ${connect} = "yes" ]]; then
read -p "Enter a number to connect: " number
while [[ ${number} -gt ${NUM_LINE} ]]; do
	if [[ ${number} -gt ${NUM_LINE} ]]; then
		echo -e "${BlackRed}your number is not in the valid range.${reset}"
		read -p "your number is: " number
	else
		exit 0
	fi
done
USERNAME="$(sort ${file} | sed -n ${number}p | cut -d ":" -f 3)"
NODE_IP="$(sort ${file} | sed -n ${number}p | cut -d ":" -f 2)"
NODE_NAME="$(sort ${file} | sed -n ${number}p | cut -d ":" -f 1)"
echo -e "${BlackGreen}Username:${USERNAME}${reset}"
echo -e "${BlackGreen}IP/HOSTNAME:${NODE_IP}${reset}"
echo -e "${BlackGreen}NAME:${NODE_NAME}${reset}"

	ssh ${USERNAME}@${NODE_IP}
	exit 0
# Uncomment this if you want to confirm the information before connecting.
#read -p "confirm ?[y]" confirm
#if [[ -z ${confirm} || ${confirm} = "y" || ${confirm} = "yes" ]]; then
#ssh ${USERNAME}@${NODE_IP}
#else
#exit 0
#fi
	elif [[ ${connect} = "n" || ${connect} = "no" ]]; then
		exit 0
	else
		echo -e "${BlackRed}NO VALID INPUT!${reset}"
		read -p "Do you wanna connect now ? [y] " connect
fi
done
